# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml

image: 
  name: "hashicorp/terraform:latest"
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

variables: 
  TF_ROOT: ${CI_PROJECT_DIR}
  TF_IN_AUTOMATION: "true"
  PLAN: plan.cache
  PLAN_JSON: plan.json

cache:
  key: ${TF_ROOT} #"$CI_COMMIT_REF_SLUG"
  paths:
    - ${TF_ROOT}/.terraform/

stages:
  - validate
  - test

terraform-validate:
  stage: validate
  script:
    - |
      terraform init
      terraform validate || exit 1

tfsec-sast:
  stage: test
  image:
    name: tfsec/tfsec-ci
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  script:
    - tfsec -f junit --out tfsec.results.xml
  artifacts:
    untracked: false
    when: on_success
    expire_in: "30 days"
    reports:
      junit: "tfsec.results.xml"
    paths:
      - "tfsec.results.xml"

secret_detection:
  stage: test
  variables:
    SECRETS_ANALYZER_VERSION: "4.5"
    SECRET_DETECTION_HISTORIC_SCAN: "true"
    GIT_DEPTH: 100
